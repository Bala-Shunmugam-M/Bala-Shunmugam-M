---
title: "Market Segmentation"
author: "Bala Shunmugam"
format: html
editor: visual
---

# Market Segmentation

## 1. Introduction

The KTC Company has a huge amount of data , they had to be organized and segmented based on their preferences, Age, Gender

## 2.Descriptive Analysis:

### 2.1.Data Exploration

We have information regarding 30 customers of KTC Company. We have details of their age, income, marital status, and their dependings (Their number of children, Loan, Mortage).

```{r}
# Define input, risk, and target variables manually
# Adjust these based on your dataset
input_vars <- c("Age", "Income", "Loan", "Mortgage")
risk_vars <- c()       # Example placeholder
target_vars <- c()     # Example placeholder
```

The descriptive analysis starts with an exploration of the dataset, which consists of 30 customers. Each variable such as age, gender, marital status, number of children, income, car loan, and mortgage—is examined using density plots to understand its distribution. This step helps identify potential patterns or irregularities in the data. For instance, age and income distributions can highlight generational or economic differences across the customer base, while loan and mortgage figures offer insights into financial commitments.

```{r}
# Define input and numeric variables manually
# Replace these with the actual column names from your dataset
numeric_vars <- c("Age", "Income", "Loan", "Mortgage")  # example placeholder
input_vars <- numeric_vars

library(readxl, quietly=TRUE)
library(dplyr)
library(ggplot2)
library(gridExtra)


# Load data (update the path to your local Excel file)
dataset <- read_excel("DemoKTC.xlsx", guess_max=1e4)
dataset

```

#### 2.1.1 Age

**Age** is a continuous numeric variable that reflects the distribution of respondents across life stages. It's useful for identifying generational trends—for instance, younger individuals may exhibit different loan behaviors compared to older ones.

```{r}
p01 <- dataset %>%
  dplyr::select(Age) %>%
  ggplot2::ggplot(ggplot2::aes(x=Age)) +
  ggplot2::geom_density(lty=3) +
  ggplot2::xlab("Age\n\nRattle 2025-Jul-19 00:06:46 ACER") +
  ggplot2::ggtitle("Distribution of Age") +
  ggplot2::labs(y="Density")

# Display the plots.

gridExtra::grid.arrange(p01)
```

#### 2.1.2 Gender

**Gender**, being a categorical variable, offers insight into the balance or diversity within your dataset. It can influence everything from purchasing decisions to loan eligibility, and exploring its distribution helps ensure fair representation across analyses.

```{r}
p01 <- dataset %>%
  dplyr::select(Female) %>%
  ggplot2::ggplot(ggplot2::aes(x=Female)) +
  ggplot2::geom_density(lty=3) +
  ggplot2::xlab("Female\n\nRattle 2025-Jul-19 00:06:49 ACER") +
  ggplot2::ggtitle("Distribution of Female") +
  ggplot2::labs(y="Density")

# Display the plots.

gridExtra::grid.arrange(p01)
```

#### 2.1.3 Martial Status

**Marital status** is another social variable that adds depth to understanding a person’s lifestyle. Married individuals often show different financial tendencies compared to singles or divorced respondents—such as higher joint expenses or shared income sources. Coupled with that, the **number of children** an individual has reflects family structure and dependency levels. Larger families might correlate with higher spending and borrowing behavior, while childless individuals may prioritize savings or mobility.

```{r}
p01 <- dataset %>%
  dplyr::select(Married) %>%
  ggplot2::ggplot(ggplot2::aes(x=Married)) +
  ggplot2::geom_density(lty=3) +
  ggplot2::xlab("Married\n\nRattle 2025-Jul-19 00:06:55 ACER") +
  ggplot2::ggtitle("Distribution of Married") +
  ggplot2::labs(y="Density")

# Display the plots.

gridExtra::grid.arrange(p01)

```

#### 2.1.4 Number of Children

The **number of children** an individual has reflects family structure and dependency levels. Larger families might correlate with higher spending and borrowing behavior, while childless individuals may prioritize savings or mobility.

```{r}
p01 <- dataset %>%
  dplyr::select(Children) %>%
  ggplot2::ggplot(ggplot2::aes(x=Children)) +
  ggplot2::geom_density(lty=3) +
  ggplot2::xlab("Children\n\nRattle 2025-Jul-19 00:06:57 ACER") +
  ggplot2::ggtitle("Distribution of Children") +
  ggplot2::labs(y="Density")

# Display the plots.

gridExtra::grid.arrange(p01)
```

#### 2.1.5 Income

The backbone of financial analysis is **income**—a numeric variable that speaks to purchasing power and overall economic stability. Examining income distribution helps you detect inequalities, identify affluent groups, and understand who might qualify for loans or mortgages.

```{r}
p01 <- dataset %>%
  dplyr::select(Income) %>%
  ggplot2::ggplot(ggplot2::aes(x=Income)) +
  ggplot2::geom_density(lty=3) +
  ggplot2::xlab("Income\n\nRattle 2025-Jul-19 00:06:52 ACER") +
  ggplot2::ggtitle("Distribution of Income") +
  ggplot2::labs(y="Density")

# Display the plots.

gridExtra::grid.arrange(p01)
```

#### 2.1.6 Car Loan

**Car loans**, typically recorded as yes/no answers, indicate shorter-term credit use, often linked to mobility needs and income level.

```{r}
p01 <- dataset %>%
  dplyr::select(Loan) %>%
  ggplot2::ggplot(ggplot2::aes(x=Loan)) +
  ggplot2::geom_density(lty=3) +
  ggplot2::xlab("Loan\n\nRattle 2025-Jul-19 00:06:59 ACER") +
  ggplot2::ggtitle("Distribution of Loan") +
  ggplot2::labs(y="Density")

# Display the plots.

gridExtra::grid.arrange(p01)
```

#### 2.1.7 Mortgage

Lastly, **mortgages** reflect long-term financial commitments and asset ownership. Those with mortgages are likely to have stable income and long-term residency plans, which can influence many lifestyle and financial choices.

Exploring these variables—individually and in relation to one another—paints a rich picture of demographic and financial realities. It guides you to recognize trends, segment the population meaningfully, and prepare for deeper analysis like clustering or predictive modeling. Let me know if you'd like a written summary of how these factors relate in your specific dataset—I’d be happy to help synthesize that!

```{r}
p01 <- dataset %>%
  dplyr::select(Mortgage) %>%
  ggplot2::ggplot(ggplot2::aes(x=Mortgage)) +
  ggplot2::geom_density(lty=3) +
  ggplot2::xlab("Mortgage\n\nRattle 2025-Jul-19 00:07:02 ACER") +
  ggplot2::ggtitle("Distribution of Mortgage") +
  ggplot2::labs(y="Density")

# Display the plots.

gridExtra::grid.arrange(p01)
```

### 2.2. Data Summarizing:

The dataset presents a diverse profile of individuals characterized by varying age, gender, marital status, family structure, income levels, and financial obligations. The **age** of respondents spans a wide range, reflecting different life stages—from young adults in their 20s to individuals nearing retirement. This diversity enables observations related to financial maturity, such as how age affects loan ownership or income stability. **Gender distribution** appears balanced across the dataset, representing both male and female participants, with the potential inclusion of non-binary individuals, which helps capture societal dynamics and ensure inclusive insights.

```{r}
# Rattle timestamp: 2025-07-24 22:07:58.108785 x86_64-w64-mingw32 

# The 'Hmisc' package provides the 'contents' function.

library(Hmisc, quietly=TRUE)

# Obtain a summary of the dataset.

contents(dataset[, c(input_vars, risk_vars, target_vars)])
summary(dataset[, c(input_vars, risk_vars, target_vars)])
```

### 2.3. Segmentation using Clustering:

Clustering is a method of grouping the observation based on their similaraties. We use distance measures for assessing the dissimilarity among the observations. There are many measures of distance including Euclidean, Manhattan, Mahanlobis etc.,

```{r}
library(readxl)
DemoKTC <- read_excel("C:/Users/ACER/Documents/DemoKTC.xlsx")
mydata<-scale(DemoKTC)
d <- dist(mydata, method = "manhattan") # distance matrix
fit <- hclust(d, method="ward") # Clustering
plot(fit) # display dendogram
groups <- cutree(fit, k=5) # cut tree into 5 clusters
#draw dendogram with red borders around the 5 clusters
rect.hclust(fit, k=3, border="red")
```

The segmentation process involves two clustering techniques. First, hierarchical clustering is performed using a distance matrix calculated with the Manhattan method. This technique groups similar observations based on their proximity and visualizes the structure through a dendrogram. By cutting the dendrogram at five branches, the analysis identifies five preliminary customer groups.

```{r}
library(factoextra)
library(cluster)
library(readxl, quietly=TRUE)
mydata<- DemoKTC
data <- scale(mydata)  
fviz_nbclust(data, kmeans, method = "wss")
set.seed(123)  # For reproducibility
km <- kmeans(data, centers = 3, nstart = 25)
set.seed(123)  # For reproducibility
km <- kmeans(data, centers = 3, nstart = 25)
fviz_cluster(km, data)
data2<-data# duplicating the data
data2$cluster<-km$cluster# writing the cluster membership in to the data
data2$cluster

```

Next, K-Means clustering is used for a more precise segmentation. The data is scaled to ensure consistency across variables. The optimal number of clusters is determined using the Elbow method, which suggests three clusters. K-Means clustering is then applied, producing compact and interpretable groups. The clusters are visualized in two-dimensional space, making it easier to understand their distribution and separation.

```{r}
# Define input and numeric variables manually
# Replace these with the actual column names from your dataset
numeric_vars <- c("Age", "Income", "Loan", "Mortgage")  # example placeholder
input_vars <- numeric_vars

# Rattle timestamp: 2025-07-17 12:27:46.081723 x86_64-w64-mingw32 

# KMeans 

# Reset the random number seed to obtain the same results each time.

set.seed(123)

# The 'reshape' package provides the 'rescaler' function.

library(reshape, quietly=TRUE)

# Generate a kmeans cluster of size 3.

kmeans_result <- kmeans(sapply(na.omit(dataset[, numeric_vars]), rescaler, "range"), 3)

```

After clustering, the report presents a summary of the cluster characteristics. It includes the number of customers in each cluster and their average attribute values. This step highlights differences among customer types, such as one cluster consisting of high-income individuals with large loans, while another may represent younger, lower-income customers with fewer financial obligations. The original dataset is then divided into three subsets—one for each cluster—to support more targeted business actions.

```{r}
# Define input and numeric variables manually
# Replace these with the actual column names from your dataset
numeric_vars <- c("Age", "Income", "Loan", "Mortgage")  # example placeholder
input_vars <- numeric_vars

# Rattle timestamp: 2025-07-17 12:27:46.252969 x86_64-w64-mingw32 

# Report on the cluster characteristics. 

# Cluster sizes:

paste(kmeans_result$size, collapse=' ')

# Data means:

colMeans(sapply(na.omit(dataset[, numeric_vars]), rescaler, "range"))

# Cluster centers:

kmeans_result$centers

# Within cluster sum of squares:

kmeans_result$withinss

# Time taken: 0.00 secs

# Generate a discriminant coordinates plot.

cluster::clusplot(na.omit(dataset[, intersect(input_vars, numeric_vars)]), kmeans_result$cluster, color=TRUE, shade=TRUE, main='Discriminant Coordinates DemoKTC.xlsx')


```

Finally, the analysis concludes that the segmentation has successfully identified meaningful customer groups. These clusters provide actionable insights for personalized marketing, risk assessment, and product alignment. KTC can now use these findings to build more focused and effective customer strategies.

```{r}
data2<-mydata# duplicating the data
cluster_id<-as.vector(unlist(km$cluster))# writing the cluster membership in to the data
data2<-as.data.frame(cbind(data2,cluster_id))

# Group data2 by cluster_id and compute mean for each group
group_means <- aggregate(. ~ cluster_id, data = data2, FUN = mean)

# Split the original data into a list of data frames by cluster_id
grouped_data <- split(data2, data2$cluster_id)

# If we specifically want 3 data sets, we can extract them like this:
data_cluster1 <- grouped_data[[1]]
data_cluster2 <- grouped_data[[2]]
data_cluster3 <- grouped_data[[3]]

# Optionally view the group means
print(group_means)
```

## Conclusion:

The customer segmentation analysis successfully grouped the KTC Company's customers into distinct clusters based on key demographic and financial attributes such as age, income, loan amount, and mortgage status. Using the K-Means clustering algorithm, we were able to uncover meaningful patterns in customer behavior and identify segments with similar characteristics.

These insights provide a foundation for more targeted marketing strategies, personalized customer engagement, and optimized product offerings. For example, one cluster may represent younger customers with lower income and smaller loans, while another may consist of older, high-income individuals with substantial mortgages each requiring a different communication and service approach.

Ultimately, this segmentation enables KTC to shift from a one size fits all model to a data driven, customer-centric strategy enhancing both customer satisfaction and business efficiency.

#### About the Author

I’m a student in the MBA Program (2025–2027), currently navigating Trimester I at Amrita School of Business, Amrita Vishwa Vidyapeetham, Coimbatore. This **assignment/blog** was written as part of our coursework for **Introduction to Business Analytics.**

Blog link: <https://github.com/Bala-Shunmugam-M/Bala-Shunmugam-M/blob/Customer-Segmentation/>

